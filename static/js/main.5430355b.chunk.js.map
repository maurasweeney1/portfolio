{"version":3,"sources":["Assets/Images/meInLisbon.jpeg","Components/About/index.js","Components/Skills/index.js","Components/Projects/index.js","Components/Experience/index.js","Components/Contact/index.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","About","React","createElement","className","id","style","display","alignItems","gap","src","meInLisbon","alt","width","Skills","Projects","Experience","Contact","App","progress","setProgress","useState","activeSection","setActiveSection","sections","title","useEffect","updateProgressBar","windowHeight","window","innerHeight","documentHeight","document","documentElement","scrollHeight","scrollTop","pageYOffset","sectionElements","map","section","element","getElementById","rect","getBoundingClientRect","top","bottom","addEventListener","removeEventListener","height","concat","index","key","length","onClick","sectionId","scrollIntoView","behavior","scrollToSection","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.5430355b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/meInLisbon.dd42bbb4.jpeg\";","import React from \"react\";\nimport meInLisbon from \"../../Assets/Images/meInLisbon.jpeg\";\n\nconst About = () => {\n  return (\n    <section className=\"slide-in\" id=\"about\">\n      <h2>About Me</h2>\n      <div style={{ display: \"flex\", alignItems: \"center\", gap: \"20px\" }}>\n        <img src={meInLisbon} alt=\"Image of me\" style={{ width: \"200px\" }} />\n        <div style={{ width: \"40%\" }}>\n          <p>\n            I'm always looking for opportunities to gain new skills and put what\n            I've learned into practice, so I am currently seeking internships to\n            apply my skills in real world scenarios.\n          </p>\n        </div>\n      </div>\n    </section>\n  );\n};\nexport default About;\n","import React from \"react\";\n\nconst Skills = () => {\n  return (\n    <section className=\"slide-in\" id=\"skills\">\n      <h2>My Skills</h2>\n      <p>This is the skills section.</p>\n    </section>\n  );\n};\nexport default Skills;\n","import React from \"react\";\n\nconst Projects = () => {\n  return (\n    <section className=\"slide-in\" id=\"projects\">\n      <h2>My Projects</h2>\n      <p>This is the projects section.</p>\n    </section>\n  );\n};\nexport default Projects;\n","import React from \"react\";\n\nconst Experience = () => {\n  return (\n    <section className=\"slide-in\" id=\"experience\">\n      <h2>My Experience</h2>\n      <p>This is the experience section.</p>\n    </section>\n  );\n};\nexport default Experience;\n","import React from \"react\";\n\nconst Contact = () => {\n  return (\n    <section className=\"slide-in\" id=\"contact\">\n      <h2>Contact Me</h2>\n      <p>This is the contact section.</p>\n    </section>\n  );\n};\nexport default Contact;\n","import \"./App.css\";\nimport React, { useEffect, useState, useRef } from \"react\";\nimport About from \"./Components/About\";\nimport Skills from \"./Components/Skills\";\nimport Projects from \"./Components/Projects\";\nimport Experience from \"./Components/Experience\";\nimport Contact from \"./Components/Contact\";\n\nfunction App() {\n  const [progress, setProgress] = useState(0);\n  const [activeSection, setActiveSection] = useState(\"\");\n  const sections = [\n    { id: \"welcome\", title: \"Welcome\" },\n    { id: \"about\", title: \"About\" },\n    { id: \"skills\", title: \"Skills\" },\n    { id: \"projects\", title: \"Projects\" },\n    { id: \"experience\", title: \"Experience\" },\n    { id: \"contact\", title: \"Contact\" },\n  ];\n\n  useEffect(() => {\n    const updateProgressBar = () => {\n      const windowHeight = window.innerHeight;\n      const documentHeight =\n        document.documentElement.scrollHeight - windowHeight;\n      const scrollTop =\n        window.pageYOffset || document.documentElement.scrollTop;\n      const progress = (scrollTop / documentHeight) * 100;\n      setProgress(progress);\n\n      // Update active section\n      const sectionElements = sections.map((section) => ({\n        id: section.id,\n        element: document.getElementById(section.id),\n      }));\n\n      for (const section of sectionElements) {\n        if (section.element) {\n          const rect = section.element.getBoundingClientRect();\n          if (rect.top <= windowHeight / 2 && rect.bottom >= windowHeight / 2) {\n            setActiveSection(section.id);\n            break;\n          }\n        }\n      }\n    };\n\n    window.addEventListener(\"scroll\", updateProgressBar);\n    updateProgressBar();\n\n    return () => window.removeEventListener(\"scroll\", updateProgressBar);\n  }, [sections]);\n\n  const scrollToSection = (sectionId) => {\n    const element = document.getElementById(sectionId);\n    if (element) {\n      element.scrollIntoView({ behavior: \"smooth\" });\n    }\n  };\n\n  return (\n    <div>\n      <main>\n        {/* Sidebar Progress Bar */}\n        <div className=\"progress-container\">\n          <div className=\"progress-bar\" style={{ height: `${progress}%` }}>\n            <div className=\"section-markers\">\n              {sections.map((section, index) => (\n                <div\n                  key={section.id}\n                  className={`section-marker ${\n                    activeSection === section.id ? \"active\" : \"\"\n                  }`}\n                  style={{\n                    top: `${(index / (sections.length - 1)) * 100}%`,\n                  }}\n                  onClick={() => scrollToSection(section.id)}\n                >\n                  <span className=\"section-title\">{section.title}</span>\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n        {/* Welcome Page */}\n        <div className=\"welcome-section\">\n          <h1>\n            Welcome, I'm{\" \"}\n            <span className=\"name\">\n              <span>M</span>\n              <span>a</span>\n              <span>u</span>\n              <span>r</span>\n              <span>a</span>\n              <span>&nbsp;</span>\n              <span>S</span>\n              <span>w</span>\n              <span>e</span>\n              <span>e</span>\n              <span>n</span>\n              <span>e</span>\n              <span>y</span>\n            </span>\n          </h1>\n        </div>\n        <About />\n        <Skills />\n        <Projects />\n        <Experience />\n        <Contact />\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}