{"version":3,"sources":["Assets/Images/meInLisbon.jpeg","Components/About/index.js","Components/Skills/index.js","Components/Projects/index.js","Components/Experience/index.js","Components/Contact/index.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","About","React","createElement","className","id","style","display","alignItems","gap","src","meInLisbon","alt","width","Skills","Projects","Experience","Contact","App","activeSection","setActiveSection","useState","sections","title","useEffect","updateActiveSection","windowHeight","window","innerHeight","sectionElements","pageYOffset","document","documentElement","scrollTop","map","section","element","getElementById","rect","getBoundingClientRect","top","bottom","addEventListener","removeEventListener","index","isActive","slice","findIndex","s","includes","key","concat","length","onClick","sectionId","scrollIntoView","behavior","scrollToSection","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.119b0e4b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/meInLisbon.dd42bbb4.jpeg\";","import React from \"react\";\nimport meInLisbon from \"../../Assets/Images/meInLisbon.jpeg\";\n\nconst About = () => {\n  return (\n    <section className=\"slide-in\" id=\"about\">\n      <h2>About Me</h2>\n      <div style={{ display: \"flex\", alignItems: \"center\", gap: \"20px\" }}>\n        <img src={meInLisbon} alt=\"Image of me\" style={{ width: \"200px\" }} />\n        <div style={{ width: \"40%\" }}>\n          <p>\n            I'm always looking for opportunities to gain new skills and put what\n            I've learned into practice, so I am currently seeking internships to\n            apply my skills in real world scenarios.\n          </p>\n        </div>\n      </div>\n    </section>\n  );\n};\nexport default About;\n","import React from \"react\";\n\nconst Skills = () => {\n  return (\n    <section className=\"slide-in\" id=\"skills\">\n      <h2>My Skills</h2>\n      <p>This is the skills section.</p>\n    </section>\n  );\n};\nexport default Skills;\n","import React from \"react\";\n\nconst Projects = () => {\n  return (\n    <section className=\"slide-in\" id=\"projects\">\n      <h2>My Projects</h2>\n      <p>This is the projects section.</p>\n    </section>\n  );\n};\nexport default Projects;\n","import React from \"react\";\n\nconst Experience = () => {\n  return (\n    <section className=\"slide-in\" id=\"experience\">\n      <h2>My Experience</h2>\n      <p>This is the experience section.</p>\n    </section>\n  );\n};\nexport default Experience;\n","import React from \"react\";\n\nconst Contact = () => {\n  return (\n    <section className=\"slide-in\" id=\"contact\">\n      <h2>Contact Me</h2>\n      <p>This is the contact section.</p>\n    </section>\n  );\n};\nexport default Contact;\n","import \"./App.css\";\nimport React, { useEffect, useState } from \"react\";\nimport About from \"./Components/About\";\nimport Skills from \"./Components/Skills\";\nimport Projects from \"./Components/Projects\";\nimport Experience from \"./Components/Experience\";\nimport Contact from \"./Components/Contact\";\n\nfunction App() {\n  const [activeSection, setActiveSection] = useState(\"\");\n  const sections = [\n    { id: \"welcome\", title: \"Welcome\" },\n    { id: \"about\", title: \"About\" },\n    { id: \"skills\", title: \"Skills\" },\n    { id: \"projects\", title: \"Projects\" },\n    { id: \"experience\", title: \"Experience\" },\n    { id: \"contact\", title: \"Contact\" },\n  ];\n\n  useEffect(() => {\n    const updateActiveSection = () => {\n      const windowHeight = window.innerHeight;\n      const scrollTop =\n        window.pageYOffset || document.documentElement.scrollTop;\n\n      // Update active section\n      const sectionElements = sections.map((section) => ({\n        id: section.id,\n        element: document.getElementById(section.id),\n      }));\n\n      for (const section of sectionElements) {\n        if (section.element) {\n          const rect = section.element.getBoundingClientRect();\n          if (rect.top <= windowHeight / 2 && rect.bottom >= windowHeight / 2) {\n            setActiveSection(section.id);\n            break;\n          }\n        }\n      }\n    };\n\n    window.addEventListener(\"scroll\", updateActiveSection);\n    updateActiveSection();\n\n    return () => window.removeEventListener(\"scroll\", updateActiveSection);\n  }, [sections]);\n\n  const scrollToSection = (sectionId) => {\n    const element = document.getElementById(sectionId);\n    if (element) {\n      element.scrollIntoView({ behavior: \"smooth\" });\n    }\n  };\n\n  return (\n    <div>\n      <main>\n        <div className=\"progress-container\">\n          <div className=\"progress-line\"></div>\n          <div className=\"section-markers\">\n            {sections.map((section, index) => {\n              // Calculate if this section should be active based on current and previous sections\n              const isActive = sections\n                .slice(0, sections.findIndex((s) => s.id === activeSection) + 1)\n                .map((s) => s.id)\n                .includes(section.id);\n\n              return (\n                <div\n                  key={section.id}\n                  className={`section-marker ${isActive ? \"active\" : \"\"}`}\n                  style={{\n                    top: `${(index / (sections.length - 1)) * 100}%`,\n                  }}\n                  onClick={() => scrollToSection(section.id)}\n                >\n                  <span className=\"section-title\">{section.title}</span>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n\n        <div id=\"welcome\" className=\"welcome-section\">\n          <h1>\n            Welcome, I'm{\" \"}\n            <span className=\"name\">\n              <span>M</span>\n              <span>a</span>\n              <span>u</span>\n              <span>r</span>\n              <span>a</span>\n              <span>&nbsp;</span>\n              <span>S</span>\n              <span>w</span>\n              <span>e</span>\n              <span>e</span>\n              <span>n</span>\n              <span>e</span>\n              <span>y</span>\n            </span>\n          </h1>\n        </div>\n        <About />\n        <Skills />\n        <Projects />\n        <Experience />\n        <Contact />\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}